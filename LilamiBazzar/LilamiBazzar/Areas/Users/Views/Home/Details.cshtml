@model dynamic

<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<div class="container mt-5">
    <div class="row">
        <div class="col-md-6">
            <!-- Display all images in a carousel -->
            <div id="productCarousel" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner">
                    <div class="carousel-item active">
                        <img src="/uploads/images/@Model.FirstImage" class="d-block w-100" alt="Product Image 1" height="700px" width="500px" />
                    </div>
                    <div class="carousel-item">
                        <img src="/uploads/images/@Model.SecondImage" class="d-block w-100" alt="Product Image 2" height="700px" width="500px" />
                    </div>
                    <div class="carousel-item">
                        <img src="/uploads/images/@Model.ThirdImage" class="d-block w-100" alt="Product Image 3" height="700px" width="500px" />
                    </div>
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
        </div>

        <div class="col-md-6">
            <h2 class="text-uppercase text-dark">Antique Vase</h2>
            <p class="text-muted">This is a beautiful antique vase with intricate designs, perfect for any collector.</p>
            <p class="h4 text-success">Starting Price: @Model.Product.StartingPrice</p>

            <div class="mt-4">
                <p class="h5">Current Highest Bid: <span class="text-danger">750 €</span></p>
                <p class="text-muted">Auction ends on: October 10, 2024</p>
            </div>
            <div class="mt-4">
                <p class="h5">Already Pay Amount :  <span class="text-danger">@Model.AlreadyPayAmount</span></p>
                <p class="text-muted"></p>
            </div>
            @if (Model.RequiredPayAmount < 0)
            {
                <div class="mt-4">
                    <p class="h5">To win the bid you have to pay: Rs.0 , Since you alredy pay : @Model.AlreadyPayAmount  <span class="text-danger"></span></p>
                    <p class="text-muted"></p>
                </div>
            }
            else if (Model.AlreadyPayAmount <= 0)
            {
                <div class="mt-4">
                    <p class="h5">To win the bid you have to pay more than : Rs.750<span class="text-danger"></span></p>
                    <p class="text-muted"></p>
                </div>
            }
            else
            {
                <div class="mt-4">
                    <p class="h5">To win the bid you have to pay: @Model.RequiredPayAmount , Since you alredy pay : @Model.AlreadyPayAmount  <span class="text-danger"></span></p>
                    <p class="text-muted"></p>
                </div>
            }
           

            <div class="mt-4">
                <label for="bidAmount" class="form-label">Place your bid</label>
                <input type="number" class="form-control" id="bidAmount" placeholder="Enter your bid amount" min="500" />

                <button type="button" class="btn btn-primary mt-3 w-100" data-toggle="modal" data-target="#bidConfirmationModal" data-amount="">
                    Place Bid
                </button>
            </div>

            <div class="mt-3 text-center">
                <a href="#" class="btn btn-secondary">View All Bids</a>
                
                <div>
                    @foreach (var bid in Model.BidsWithUsers)
                    {
                        <tr>
                            <td>@bid.Username</td>
                            <td>@bid.BidAmount</td>
                        </tr>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Bid Confirmation Modal -->
    <div class="modal fade" id="bidConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="bidConfirmationModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="bidConfirmationModalLabel">Confirm Your Bid</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to place a bid of <strong id="bidAmountDisplay">$0</strong>?</p> <!-- Dynamic bid amount -->
                </div>
                <div class="modal-footer">
                    <form action="https://rc-epay.esewa.com.np/api/epay/main/v2/form" method="POST" id="bidForm">
                        <input type="text" id="amount" name="amount" value=""  hidden />
                        <input type="text" id="tax_amount" name="tax_amount" value="0"  hidden />
                        <input type="text" id="total_amount" name="total_amount" value="" required hidden />
                        <input type="text" id="transaction_uuid" name="transaction_uuid" value="" hidden />
                        <input type="text" id="product_code" name="product_code" value="EPAYTEST" required hidden />

                        <input type="text" id="product_service_charge" name="product_service_charge" value="0" required hidden />
                        <input type="text" id="product_delivery_charge" name="product_delivery_charge" value="0" required hidden />
                        <input type="text" id="success_url" name="success_url" value="https://localhost:7136/Users/Home/PaymentVerify" required hidden />
                        <input type="text" id="failure_url" name="failure_url" value="https://google.com" required hidden />
                        <input type="text" id="signed_field_names" name="signed_field_names" value="total_amount,transaction_uuid,product_code" required hidden />
                        <input type="text" id="signature" name="signature" hidden />
                        <button type="submit" class="btn btn-primary" id="confirmBid">Confirm</button> <!-- Change this button to type="submit" -->
                    </form>

                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Improved Item Details Section -->
    <div class="row mt-5">
        <div class="col-12">
            <h4 class="text-dark">Item Details</h4>
            <table class="table table-bordered">
                <thead class="table-light">
                    <tr>
                        <th>Detail</th>
                        <th>Information</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <th scope="row">Category</th>
                        <td>Antiques</td>
                    </tr>
                    <tr>
                        <th scope="row">Condition</th>
                        <td>Excellent</td>
                    </tr>
                    <tr>
                        <th scope="row">Dimensions</th>
                        <td>30cm x 20cm x 20cm</td>
                    </tr>
                    <tr>
                        <th scope="row">Weight</th>
                        <td>1.5kg</td>
                    </tr>
                    <tr>
                        <th scope="row">Material</th>
                        <td>Ceramic</td>
                    </tr>
                    <tr>
                        <th scope="row">Seller</th>
                        <td>John Doe</td>
                    </tr>
                    <tr>
                        <th scope="row">Shipping Information</th>
                        <td>Free Shipping Worldwide</td>
                    </tr>
                    <tr>
                        <th scope="row">Return Policy</th>
                        <td>30 Days Return</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div class="container mt-5">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Add Your Review</h5>
                <textarea class="form-control" rows="3" placeholder="Write your review..." id="reviewText"></textarea>

                <div class="mt-3">
                    <button type="button" class="btn btn-success" id="thumbsUp">
                        <i class="fas fa-thumbs-up"></i>
                        <span id="thumbsUpCount">0</span>
                    </button>
                    <button type="button" class="btn btn-danger" id="thumbsDown">
                        <i class="fas fa-thumbs-down"></i>
                        <span id="thumbsDownCount">0</span>
                    </button>
                </div>

                <button type="button" class="btn btn-primary mt-2" id="submitReview">Submit Review</button>
            </div>
        </div>
    </div>


<script src="~/js/CustomJs.js" /></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script>
        // Initialize counts
        let thumbsUpCount = 0;
        let thumbsDownCount = 0;

        $(document).ready(async function () {
            // Event handler for thumbs up button
            $("#thumbsUp").click(async function () {
                // If thumbs up is clicked
                thumbsUpCount = 1;  // Set like count to 1
                thumbsDownCount = 0; // Reset dislike count
                $("#thumbsUpCount").text(thumbsUpCount);
                $("#thumbsDownCount").text(thumbsDownCount); // Update dislike count to 0
            });

            // Event handler for thumbs down button
            $("#thumbsDown").click(async function () {
                // If thumbs down is clicked
                thumbsDownCount = 1; // Set dislike count to 1
                thumbsUpCount = 0; // Reset like count
                $("#thumbsDownCount").text(thumbsDownCount);
                $("#thumbsUpCount").text(thumbsUpCount); // Update like count to 0
            });

            // Handle review submission
            $("#submitReview").click(async function () {
                const reviewText = $("#reviewText").val();
                debugger
                // Prepare data for submission
                const reviewInput = {
                    Review: reviewText,
                    ThumbsUp: thumbsUpCount > 0 ? true : false ,
                    ThumbsDown: thumbsDownCount > 0 ? true : false
                };
                debugger

                // try {
                //     // Make an AJAX POST request to save the review
                //     const response = await $.ajax({
                //         url: "/Users/Home/Review", // Ensure this is the correct URL
                //         type: "POST",
                //         contentType: "application/json",
                //         data: JSON.stringify(reviewData) // Serialize the data into JSON
                //     });

                //     // Handle successful response
                //     console.log("Review submitted successfully:", response);
                //     // Optionally, clear the textarea and reset counts
                //     $("#reviewText").val(""); // Clear the review text area
                //     thumbsUpCount = 0; // Reset thumbs up count
                //     thumbsDownCount = 0; // Reset thumbs down count
                //     $("#thumbsUpCount").text(thumbsUpCount);
                //     $("#thumbsDownCount").text(thumbsDownCount);

                // } catch (error) {
                //     console.error("Error submitting review:", error);
                //     // Optionally handle error response (e.g., show a message to the user)
                // }

                // var placeAunction = await AjaxCall("/Users/Home/Review", reviewData);
                try {
                    const response = await $.ajax({
                        url: "/Users/Home/Review", // Ensure this is the correct URL
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(reviewInput) // Serialize the data into JSON
                    });

                    console.log("Review submitted successfully:", response);
                    $("#reviewText").val(""); // Clear the review text area
                    thumbsUpCount = 0; // Reset thumbs up count
                    thumbsDownCount = 0; // Reset thumbs down count
                    $("#thumbsUpCount").text(thumbsUpCount);
                    $("#thumbsDownCount").text(thumbsDownCount);

                } catch (error) {
                    console.error("Error submitting review:", error);
                }

            });
        });
    </script>

<script>
    // When the Place Bid button is clicked, set the bid amount in the modal
    document.querySelectorAll('.btn-primary[data-target="#bidConfirmationModal"]').forEach(function (button) {
        button.addEventListener('click', function () {
            var bidAmount = document.getElementById('bidAmount').value;
            var bidAmountDisplay = document.getElementById('bidAmountDisplay');
            bidAmountDisplay.textContent = "$" + bidAmount; // Set the bid amount in the modal
        });
    });

    // Handling bid confirmation and submitting the form
    $('#confirmBid').click(async function (e) {
        e.preventDefault(); // Prevent the form from submitting right away

        var amount = parseFloat($('#bidAmount').val()); // Get the value of the bid amount
        var productId = '@Model.Product.ProductId'; // Use Razor to get the product ID

        var data = {
            amount: amount,  // Use the amount variable
            productId: productId // Use the product ID
        };

        try {
            // Ensure AjaxCall is correctly defined and returns a promise
            var placeAunction = await AjaxCall("/Users/Home/Payments", data);

            // Debugging and form value setting
            console.log(placeAunction);

            // Set the values in the form
            $('#amount').val(placeAunction.totalAmount);
            $('#tax_amount').val(0);
            $('#total_amount').val(placeAunction.totalAmount);         // Use .val() for input elements
            $('#transaction_uuid').val(placeAunction.transactionId);
            // Use the correct key
            $('#product_code').val(placeAunction.productCode);
            // Use the correct key
            $('#signature').val(placeAunction.signature);

            // Submit the form after setting all the values
            $('#bidForm').submit();

        } catch (error) {
            console.error("Error placing auction:", error); // Handle errors gracefully
        }
    });
</script>
